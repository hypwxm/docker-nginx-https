upstream proxy_name {
    #ip_hash;
    server hostname:port;
}

server {
    listen  80;
    server_name hostname;
    location / {
        rewrite ^(.*)$  https://$host$1 permanent;
    }
    # 设置某个路由不进行https转发
    location ~* .*/aa/bb{
        proxy_pass http://xx;
    }
}


server {
    listen 80;
    listen 443 ssl;
    server_name hostname;
    ssl_certificate /etc/nginx/conf.crt/live/hostname/fullchain.pem;
    ssl_certificate_key /etc/nginx/conf.crt/live/hostname/privkey.pem;
    ssl_trusted_certificate /etc/nginx/conf.crt/live/hostname/chain.pem;
    ssl_session_timeout  5m;

    location ^~ /.well-known/acme-challenge/ {
   		default_type "text/plain";
  		root     /usr/share/nginx/html;
	}

	location = /.well-known/acme-challenge/ {
   		return 404;	
	}


    location / {
        proxy_pass http://proxy_name;
	    #add_header 'Access-Control-Allow-Origin' '*';
   
        #与http里面设置的limit_req_zone对应，zone对应的http里面定义的名字， burst，表示第一次请求的数量大于rate，那么假剩下的放大下一秒请求，但是之后的请求就直接503
        limit_req zone=one burst=20 nodelay;

    }
    location ~* .*\.(css|js|gif|jpg|png|jpeg|flv|ico|swf|zip|mp4)$ {
		proxy_pass http://proxy_name;
		proxy_redirect off;
        proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
		proxy_set_header Host $host;

		#缓存设置对应的是http里面的 proxy_cache_path，名称与kes_zone对应
		#proxy_cache cache_mzzkView;
		#proxy_cache_valid 200 302 10m;
		#proxy_cache_valid 301 1m;
		#proxy_cache_valid any 1m;

		#如果我们希望某个 url 至少被请求5次之后才被缓存，就这样：
        #proxy_cache_min_uses 5;

        #expires设置的是浏览器对文件的缓存。
		expires 10m;


             #防盗链
		valid_referers none blocked *.qq.com *.baidu.com;
        if ($invalid_referer) {
            #rewrite ^/ http://xx.png;
            return 403;
        }
	}

    #禁止访问.htxxx 文件
    location ~ /.ht {
        deny all;
    }
}